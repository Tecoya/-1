Ant
使用ant前提：系统已经安装JDK 和Ant.
下载ant后， 
bin是ant的程序运行入口，如果没有配置ANT_HOME的情况下，可以通过bin目录中的bat程序进行运行build任务。
etc目录中存放的都是一些xsl的输出模板，创建一个加强的导出各种任务的XML输出，使你的build文件摆脱过时的警告
lib目录中存放的是ant程序需要依赖的jar包
manual目录是ant程序的帮助文档


1.	ant配置
 
检验Ant安装成功
 
2.Ant的一些命令
 
具体一些命令的用法
http://www.cnblogs.com/hoojo/archive/2013/06/14/java_ant_project_target_task_run.html

3.运行第一个构建文件（文件版dots）
 首先建一个Java工程，文件中在建一个src和bin，然后在src里面创建一个Java类文件
package test;
public class antTest{
  public static void main(String[] args){
    for(int i=0;i<args.length;i++){
    System.out.println(args[i]);         
    }
  }
然后在工程路径下面建一个build.xml文件
<?xml version="1.0"?>
<project name="structured" default="archive" >

<target name="init">
<mkdir dir="build/classes" />
<mkdir dir="dist" />
</target>

<target name="compile" depends="init" >
<javac srcdir="src" 
destdir="build/classes"/>
</target>

<target name="archive" depends="compile" >
<jar destfile="dist/project.jar"
basedir="build/classes" />
</target>

<target name="clean" depends="init">
<delete dir="build" />
<delete dir="dist" />
</target>

<target name="execute" depends="compile">
<java classname="test.antTest"
classpath="build/classes">
<arg value="a"/>
<arg value="b"/>
<arg file="."/>
</java>
</target>
</project>

  
 
 
Ant 构建文件总是有一个<project>元素做为根元素，它有两个属性，name和default，<target>元素是<project>元素的子元素，可以有多个，它有两个属性，name和depends，<target>元素包含的元素就是一些任务元素。
<target>可以由命令行进行显示的调用，也可以在内部使用如可以直接调用ant init、ant compile等。如果不写参数，则默认的build文件是build.xml，默认的目标是<project>的default属性定义的目标。目标的名称是唯一的，可以是任意字符串。
 如果出现错误，则可以使用ant –verbose或者ant ？ Cdebug获取详细信息
 
  执行正确后，会出现
 

<target name="compile" depends="init" >
<target name="archive" depends="compile" >
<target name="clean" depends="init">

archive依赖于init和compile，但是我们不需要去写，因为compile已经依赖于init了。即：Ant的依赖关系是传递的，但不是自反的
 
执行完ant后，可以执行ant clean清理（具体请进的网址http://wenku.baidu.com/link?url=-Djg4GvswtP7uNW9W8FT-zViUfH7wlPQ9eSdOnjThS4zt2dq2e7BQBrf2NGJT7_QTh2401uxsJdzxpdG-6-4jxS9YDPRKcKNCGpCTvPmLD_）
用eclipse或myeclipse自动构建工具ant的使用
http://www.cnblogs.com/super-d2/archive/2012/12/31/2840989.html

 
